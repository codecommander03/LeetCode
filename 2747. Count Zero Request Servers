class Solution {
public:
    vector<int> countServers(int n,vector<vector<int>>& logs, int x, vector<int>& queries) {
        sort(logs.begin(),logs.end());
        vector<pair<int,int>> q2;
        for(int i=0;i<queries.size();i++) q2.push_back({queries[i],i});
        vector<int> ans(q2.size());
        unordered_map<int,int> m;
        for(auto &it:logs) swap(it[0],it[1]);
        sort(logs.begin(),logs.end());
        sort(q2.begin(),q2.end());
        int i=0,j=0,cnt=0;
        for(auto &q: q2){
            while(j<logs.size() && logs[j][0]<=q.first){
                m[logs[j][1]]++;
                if(m[logs[j][1]]==1) cnt++;
                j++;
            }
            while(i<logs.size() && logs[i][0]<q.first-x){
                m[logs[i][1]]--;
                if(m[logs[i][1]]==0) cnt--;
                i++;
            } 

            ans[q.second] = n-cnt;
        }
        return ans;
    }
};
