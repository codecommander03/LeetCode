class Solution {
public:
    int v[1001];

    int find(int i){
        if(v[i]==i) return i;
        return v[i] = find(v[i]);
    }
    void union1(int i,int j){
        v[i] = j;
    }
    int minCostConnectPoints(vector<vector<int>>& points) {
        int n = points.size();

        for(int i=0;i<=n;i++) v[i] = i;

        vector<vector<int>> adj;

        for(int i=0;i<n-1;i++){
            for(int j=i+1;j<n;j++){
                adj.push_back({abs(points[i][0]-points[j][0])+abs(points[i][1]-points[j][1]),i,j});
            }
        }

        sort(adj.begin(),adj.end());
        int ans = 0;

        for(int i=0;i<adj.size();i++){
            int a = find(adj[i][1]);
            int b = find(adj[i][2]);

            if(a!=b){
                union1(a,b);
                ans += adj[i][0];
            }
        }

        return ans;
    }
};
